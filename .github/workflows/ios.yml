name: iOS CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  format-lint:
    runs-on: macos-15
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-ios-swiftformat
      cancel-in-progress: true

    steps:
      - name: Upgrade swiftformat to latest
        run: brew install swiftformat

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Check format
        run: swiftformat . --lint

  build:
    runs-on: macos-15
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-ios-build-lib
      cancel-in-progress: true
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Make sure that Package.swift is not configured for local development
      run: |
        if grep -q "let useLocalFramework = true" Package.swift; then
          echo "Error: Package.swift is configured for local development. Please set useLocalFramework to false."
          exit 1
        fi

      - name: Build iOS XCFramework
        run: ./build-ios.sh --release
        working-directory: rust

      - name: Commit changed files (it is easy to forget about the autogenerated Swift bindings)
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: "apple/Sources/UniFFI/*"

      # This is incidentally quite similar to what a release workflow will look like
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: libunimusic_sync-rs.xcframework.zip
          path: rust/target/ios/libunimusic_sync-rs.xcframework.zip
          retention-days: 5

  test:
    runs-on: macos-15
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-ios-test
      cancel-in-progress: true
    needs: build
    strategy:
      matrix:
        scheme: [UniMusicSync]
        destination: [
            # TODO: Add more destinations
            "platform=iOS Simulator,name=iPhone 16 Pro,OS=18.4",
          ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download libunimusic_sync-rs.xcframework
        uses: actions/download-artifact@v4
        with:
          path: rust
          name: libunimusic_sync-rs.xcframework.zip

      - name: Unzip libunimusic_sync-rs.xcframework
        run: ditto -x -k libunimusic_sync-rs.xcframework.zip target/ios/
        working-directory: rust

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.3"

      - name: Install xcbeautify
        run: brew install xcbeautify

      - name: Test ${{ matrix.scheme }} on ${{ matrix.destination }}
        run: xcodebuild -scheme ${{ matrix.scheme }} test -skipMacroValidation -destination '${{ matrix.destination }}' | xcbeautify && exit ${PIPESTATUS[0]}

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: Library-Package.swift
          path: Package.swift
          retention-days: 5
